\documentclass{beamer}
\usepackage[T1]{fontenc}
\usepackage{color, graphicx, hyperref, listings}
\usetheme{Dresden}
\title[Lecture 5]{PS6 Lecture 5}
\author{Daniel Lim}
\institute{University of California, Los Angeles}
\date{8/19/2013}

\begin{document}

\graphicspath{ {../../img/} }

<<echo=F>>=
options(width = 60)
load('../../data/gdp.rdata') #preload data
library(plotrix)
@

\begin{frame}
\titlepage
\end{frame}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\begin{frame}{Agenda}
\begin{itemize}
  \item New data set: GDP/capita
  \item Shape of data
  \item Transforming variables
  \item Bivariate relationships
    \begin{itemize}
      \item contingency tables
      \item scatterplot
      \end{itemize}
  \end{itemize}
\end{frame}
%%%%%%%%%%%%%%
\section{Data stuff}

\begin{frame}[fragile]
\frametitle{New Dataset: GDP/capita}
Let's first introduce a new data set.
\vspace{0.1in}

\textbf{GDP per capita by country, 1966-1997}
\vspace{0.1in}

\begin{itemize}
  \item Download `World\_GDP\_1966\_97.csv' from the course website.
  \item These data are in comma-separated value (CSV) format -- a
  simple spreadsheet, with columns separated by commas.
  \end{itemize}

\end{frame}
%%%%%%%%%%%%%

\begin{frame}[fragile]
\frametitle{New Dataset: GDP/capita}
To load, we will use `read.csv' from the `foreign' library, which is similar to
`read.xlsx'
\vspace{0.1in}

\footnotesize
<<eval = F>>=
library(foreign)
f = '../../data/World_GDP_1966_97.csv'
gdp = read.csv(f, stringsAsFactors = F)
@
\normalsize
\vspace{0.1in}

Once loaded, you should do all the basic exercises from lecture 1 to acquaint
yourself with these data.

\end{frame}
%%%%%%%%%%%%%

\begin{frame}[fragile]
\frametitle{Shape of data}
One of the first things you will notice is that the `gdp' data have a different
shape from the `turnout' data.
\vspace{0.1in}

\begin{itemize}
  \item `turnout' has 1 row for each state, with 1 column for each election year
  \item `gdp' has N rows each country, where N is the number of years. Each row
  represents a country-year.
  \end{itemize}
\vspace{0.1in}

`turnout' is in \textbf{wide form}, while `gdp' is in \textbf{long form}. Each
configuration has pros/cons, which we'll encounter.
\end{frame}
%%%%%%%%%%%%%

\section{Skew \& the log transform}
\subsection{Skew}
\begin{frame}[fragile]
\begin{columns}[c] 
  \column{0.3\textwidth}

Let's take a look at the column `GDPcapImp'. These are GDP/cap vals for all
countries '66-'97.
  
  \column{0.7\textwidth}
  
  \setkeys{Gin}{width=0.9\textwidth}
  \scriptsize
<<fig=T>>=
hist(gdp$GDPcapImp)
@

\end{columns}
\end{frame}
%%%%%%%%%%%%%

\begin{frame}[fragile]
\frametitle{Skew}
Such data are described as \textbf{skewed}

\begin{itemize}
  \item We say the data are skewed to the side with the longer tail
  \item `GDPcapImp' is skewed to the right
  \end{itemize}
\vspace{0.2in}

The histogram is not as helpful as it can be because most of the observations
are clustered on the left, but we can't see what's going on there.
\end{frame}
%%%%%%%%%%%%%

\subsection{Log transform}

\begin{frame}[fragile]
\frametitle{The log transform}
In many cases, we can fix \textbf{right skew} through the use of a \textbf{log
transform}
\vspace{0.2in}

\begin{itemize}
  \item Take the natural log of the data.
  \item Has the effect of decompressing smaller numbers and compressing larger ones.
  \item If resulting data are approx. normal, we say the original data are
  \textbf{log-normal}
  \end{itemize}
\end{frame}
%%%%%%%%%%%%%

\begin{frame}[fragile]
\frametitle{The log transform}
We'll transform `GDPcapImp', then take a look at it.
\vspace{0.1in}
\footnotesize
<<tr1, eval=F>>=
xt = log(gdp$GDPcapImp)
xlims = round( range(xt), 0)
xs = seq(xlims[1], xlims[2], 0.1)
ys = dnorm(xs, mean(xt), sd(xt))

hist(xt, xlim=xlims, main='GDP/cap, all values', xlab='log($)')
par(new=T)
plot(xs, ys, xlim=xlims, type='l', xaxt='n', yaxt='n',
		main='', xlab='', ylab='', col='red', lwd=2, lty=2)
lines(density(xt), col='black', lwd=2, lty=1 )
@
\normalsize

\end{frame}
%%%%%%%%%%%%%

\begin{frame}[fragile]
\frametitle{The log transform}
\begin{columns}[c] 
  \column{0.65\textwidth}
  
  \setkeys{Gin}{width=\textwidth}
<<fig=T, echo=F>>=
<<tr1>>
@
  
  \column{0.35\textwidth}
  
  Looks pretty normal. Depending on our purpose, it's probably safe to call
  these data log-normal.
  
  \end{columns}

\end{frame}
%%%%%%%%%%%%%

\begin{frame}[fragile]
\frametitle{The log transform}
Why does the log transform work?
\vspace{0.2in}

Let's experiment with some easy numbers.
\footnotesize
<<logex, eval=F>>=
Xs = 1:10
LXs = log(Xs)
plot(Xs, Xs, type='l', ylim=c(0, 10), ylab='Ys', lwd=2)
lines(Xs, LXs, col='red', lwd=2)
legend('topleft', c('raw', 'logged'), 
		col=c('black', 'red'), lwd=c(2, 2))
@

\end{frame}
%%%%%%%%%%%%%

\begin{frame}[fragile]
\frametitle{The log transform}
\begin{columns}[c] 
  \column{0.65\textwidth}
  
  \setkeys{Gin}{width=\textwidth}
<<fig=T, echo=F>>=
<<logex>>
@
  
  \column{0.35\textwidth}
  
  Numbers that were small are shrunk less than numbers that were large
  \vspace{0.1in}
  
  So, we get a decompressing/compressing effect.  
  \end{columns}

\end{frame}
%%%%%%%%%%%%%

\begin{frame}[fragile]
\frametitle{The log transform}
Looks like it can make our graphs look normal -- so what? 
\vspace{0.2in}

2 major scenarios in which to use the log transform
\vspace{0.1in}

\begin{itemize}
  \item examine percent change
  \item reduce leverage of particular observations in statistical regression
  \end{itemize}
\vspace{0.2in}

We'll talk about point 2 in lectures 8-10. For now, let's look at percent
change.

\end{frame}
%%%%%%%%%%%%%

\begin{frame}[fragile]
What do log units mean on a normal scale?
\vspace{0.1in}

To illustrate: define a vector 1:4, and say these are the on the
log scale. To get normal scale numbers, we take their exponent (because
$exp(log(x)) = x$).
\footnotesize
<<>>=
logXs = 1:4
Xs = exp(logXs)
Xs
log(Xs)
@

\end{frame}
%%%%%%%%%%%%%

\begin{frame}[fragile]
Log units transform back to normal units in a nonlinear form.
\vspace{0.2in}
\begin{columns}[c] 
  \column{0.4\textwidth}
  Log scale: difference between all elements is simply 1
  
  \begin{itemize}
  \item  $2-1=1$
  \item  $3-2=1$
  \item  $4-3=1$
  \end{itemize}
  
  \column{0.4\textwidth}
  Regular scale: difference between elements changes
  
  \begin{itemize}
  \item  $ \Sexpr{round(Xs[2],2)} - \Sexpr{round(Xs[1],2)} = \Sexpr{round(Xs[2]-Xs[1],2)}$
  \item  $ \Sexpr{round(Xs[3],2)} - \Sexpr{round(Xs[2],2)} = \Sexpr{round(Xs[3]-Xs[2],2)}$
  \item  $ \Sexpr{round(Xs[4],2)} - \Sexpr{round(Xs[3],2)} = \Sexpr{round(Xs[4]-Xs[3],2)}$
  \end{itemize}
  
  \end{columns}

\end{frame}
%%%%%%%%%%%%%

\begin{frame}[fragile]
No obvious pattern to increases of \Sexpr{round(Xs[2]-Xs[1],2)},
\Sexpr{round(Xs[3]-Xs[2],2)}, \Sexpr{round(Xs[4]-Xs[3],2)}. However, there is
more than meets the eye.\vspace{0.1in}
\footnotesize
<<>>=
(Xs[2] - Xs[1])/Xs[1]
(Xs[3] - Xs[2])/Xs[2]
(Xs[4] - Xs[3])/Xs[3]
@
\normalsize
\vspace{0.1in}

\textbf{Percent change remains constant!}
\end{frame}
%%%%%%%%%%%%%

\begin{frame}[fragile]
The log scale can be interpreted as a measure of \textbf{percent
change}\vspace{0.1in}
\begin{itemize}
  \item a change of 1 log unit is the same percent change whether moving
  from 1 to 2, or 101 to 102.\vspace{0.1in}
  \item magnitude matters (obviously) -- moving from 0.1 to 0.2 is the same \%
  change as 4.5 to 4.6, but not as 1 to 2.\vspace{0.1in}
  \item e.g. a country with log(GDP/cap) of 8 (i.e. \$\Sexpr{round(exp(8),2)})
  is the same percent bigger than one with 7 (i.e.
  \$\Sexpr{round(exp(7),2)}), as 9 (i.e.
  \$\Sexpr{round(exp(9),2)}) versus 8.
  \end{itemize}

\end{frame}
%%%%%%%%%%%%%

\begin{frame}[fragile]
A few more thoughts on transformation\vspace{0.1in}

\begin{itemize}
  \item Can't log numbers less than 0. If raw data don't
  meet that criteria, you can modify them so that they do.\vspace{0.1in}
  \item For data that are \textbf{left-skewed}, unskew by taking the square root
  (instead of logging)\vspace{0.1in}
  \item When you want to describe data in writing, you still need to use the
  original scale (i.e. log(\$) is not an intuitive unit)
  \end{itemize}

\end{frame}
%%%%%%%%%%%%%

\section{Intro to Bivariate analysis}

\begin{frame}[fragile]
\frametitle{Bivariate analysis}
So far, we've only looked at single variables/columns of data.
\vspace{0.2in}

However, most things we do in social science are about explaining relationships
\vspace{0.1in}
\begin{itemize}
  \item relationships require multiple variables
  \item let's start with most basic type -- bivariate relationships (i.e.
  between 2 variables)
  \end{itemize}

\end{frame}
%%%%%%%%%%%%%

\begin{frame}[fragile]
\frametitle{Visualizing bivariate data}
Upon loading multivariate data, you should\ldots
\vspace{0.1in}

\begin{itemize}
  \item visualize univariate dists. using techniques covered so far.
  \item visualize bivariate relationships
  \end{itemize}
\vspace{0.2in}

In fact, we already saw one way to view bivariate relationships, using
side-by-side boxplots (lecture 2). Here we'll cover 2 more:
\vspace{0.1in}
\begin{itemize}
  \item contingency tables (AKA cross tabs)
  \item scatterplots
  \end{itemize}
\end{frame}
%%%%%%%%%%%%%
\section{Contingency tables}
\subsection{Description/definition}

\begin{frame}[fragile]
\frametitle{Contingency tables}
Contingency tables let us look at the breakdown of data by bivariate
relationship.
\vspace{0.2in}

Let's load a small dataset to demonstrate.
\vspace{0.2in}

\textbf{Composition of this PS6 class by sex, field and year in school}
\footnotesize
<<>>=
f.roster = '../../data/roster.csv'
roster = read.csv(f.roster, stringsAsFactors = F)
@
\normalsize

\end{frame}
%%%%%%%%%%%%%

\begin{frame}[fragile]
\frametitle{Contingency tables}
These are the breakdowns of this class by sex and field, and sex and class year.
\footnotesize
<<>>=
table(roster$female, roster$field)
table(roster$female, roster$year)
@

\end{frame}
%%%%%%%%%%%%%

\begin{frame}[fragile]
This is by field and class year
\vspace{0.1in}

\footnotesize
<<>>=
table(roster$field, roster$year)
@

\end{frame}
%%%%%%%%%%%%%

\begin{frame}[fragile]
\begin{itemize}
  \item Such tables allow us to see how one var. varies with
  another\vspace{0.1in}
  \item Very useful for simple data -- quick and succinct summary\vspace{0.1in}
  \item While not included here, contingency tables often have an addt'l row
  and column summing the results by row and column. These are called the
  \textbf{margins}.
  \end{itemize}

\end{frame}
%%%%%%%%%%%%%

\begin{frame}[fragile]
\frametitle{Margins}
You can add margins to a table as follows:
\vspace{0.1in}

\footnotesize
<<>>=
tab1 = table(roster$field, roster$year)
mar.row = margin.table(tab1, 1)
tab1 = cbind(tab1, mar.row)
mar.col = margin.table(tab1, 2)
tab1 = rbind(tab1, mar.col)
tab1
@
\normalsize

\end{frame}
%%%%%%%%%%%%%

\begin{frame}[fragile]
Notes regarding code on previous slide
\vspace{0.2in}

\begin{itemize}
  \item `margin.table' computes margins for the table specified in
  \textit{arg1}, for the dimension specified in \textit{arg2}
  \begin{itemize}
    \item 1 is by row, 2 is by column
    \end{itemize}
    \vspace{0.1in}
    
  \item `cbind' adds a column to the end of a table
  \item `rbind' adds a row to the end of a table
  \begin{itemize}
    \item can add as many rows/cols as you want, but order matters
    \item `cbind'ing N vectors of length M creates an $M \times N$ table
    \item `rbind'ing N vectors of length M creates an $N \times M$ table
    \end{itemize}
  \end{itemize}
\end{frame}
%%%%%%%%%%%%%
\subsection{Limitations}

\begin{frame}[fragile]
\frametitle{Limitations of contingency tables}
One limitation of contingency tables: they don't work well with
continuous data, or discrete data with too many unique values.
\vspace{0.2in}

Try the following to see what I mean.
\small
<<eval=F>>=
table(gdp$Year, gdp$GDPcapImp)
@
\end{frame}
%%%%%%%%%%%%%

\begin{frame}[fragile]
To use contingency tables with such data, we need to segment the data,
limiting the number of unique values that we are making a table out of.
\vspace{0.2in}

We can do this in R using the `cut' function

\begin{description}
  \item[arg 1:] the data that you want to segment
  \item[arg 2:] can be one of 2 things:
  \begin{itemize}
    \item single number specifying how many bins
    \item vector of points at which to cut the data.
  \end{itemize}
  \end{description}

\end{frame}
%%%%%%%%%%%%%

\begin{frame}[fragile]
Here's a simple example to see how `cut' works
\footnotesize
<<>>=
fake = 1:10
fake1 = cut(fake, 2)
fake2 = cut(fake, c(-100, 2, 7, 100))
table(fake1)
table(fake2)
@
\normalsize

\end{frame}
%%%%%%%%%%%%%

\begin{frame}[fragile]
Here we use `cut' to preprocess the GDP data before tabling. 
\footnotesize
<<>>=
year2 = cut(gdp$Year, seq(1960, 2000, 10))
gdp2 = cut(gdp$GDPcapImp, c(0, 1000, 5000, 10000, 20000, 1e6))
tab2 = table(year2, gdp2)
tab2
@

\end{frame}
%%%%%%%%%%%%%

\begin{frame}[fragile]
We see that\ldots
\vspace{0.1in}
\begin{itemize}
  \item the distribution of GDP/cap expands upward over time
  \begin{itemize}
    \item beyond this basic point, hard to see other patterns using table
    \end{itemize}
    \vspace{0.1in}
    
  \item given the continuous nature of gdp/cap\ldots
  \begin{itemize}
    \item we've lost a lot of information by segmenting
    \item visualizing using a side-by-side boxplot or scatterplot would be a
    better choice
    \end{itemize}
\end{itemize}
\vspace{0.1in}

It's helpful to see how these data look using a scatterplot.

\end{frame}
%%%%%%%%%%%%%
\section{Scatterplots}
\subsection{Description/definition}
\begin{frame}[fragile]
\frametitle{Scatterplots}

Plot with a single mark (typically a dot) for each observation
\begin{itemize}
  \item x coordinate is each observation's value on one variable
  \item y coordinate is value on the other variable
  \end{itemize}
\vspace{0.2in}

In R, we use the trusty `plot' command to create scatterplots.  
\begin{itemize}
  \item We previously used `plot' with the ``type='l' '' argument to create densities.
  \item For scatterplots, just omit `type'.
\end{itemize}
\vspace{0.2in}

For example:
\footnotesize
<<sp1, eval=F>>=
plot(gdp$Year, gdp$GDPcapImp)
@

\end{frame}
%%%%%%%%%%%%%

\begin{frame}[fragile]

\setkeys{Gin}{width=0.8\textwidth}
<<echo=F, fig=T>>=
<<sp1>>
@

\end{frame}
%%%%%%%%%%%%%

\begin{frame}[fragile]
What are some things we notice from this plot?  
\vspace{0.2in}

\begin{itemize}
  \item growing gap between GDP/cap in rich and poor countries -- the rich get
  richer, the poor stay relatively poor
  \item hard to say definitively but it looks like there's a lot more poor
  countries than rich
  \item there are a few extremely high outliers between 1975 and 1985
\end{itemize}

\end{frame}
%%%%%%%%%%%%%

\begin{frame}[fragile]
\frametitle{The gap between rich and poor}
\begin{itemize}
  \item While it seems fairly obvious, let's first make sure it's the same countries
that continue to get richer from year to year. We'll do this by coloring the
countries in the upper band a separate color.\vspace{0.1in}
  \item I'm going to use 1981 as a reference year. It looks like the upper band of
countries are those with GDP/cap $> \$8000$ in that year. \vspace{0.1in}
  \item I just eyeballed this as in the next slide.
  \end{itemize}
\end{frame}
%%%%%%%%%%%%%

\begin{frame}[fragile]

\setkeys{Gin}{width=0.8\textwidth}
<<echo=F, fig=T>>=
<<sp1>>
abline(h=8000, col='red', lwd=2, lty=2)
text(1970, 8700, 'GDP/cap = 8000')
polygon(c(1980.5, 1981.5, 1981.5, 1980.5), c(8100, 8100, 15000, 15000), col=NA, border='red')
@

\end{frame}
%%%%%%%%%%%%%

\begin{frame}[fragile]
To color these countries separately:
\vspace{0.1in}

\begin{enumerate}
  \item subset countries that had GDP/cap $> \$8000$ in 1981 \vspace{0.1in}
  \item add an indicator (`high') to the full dataset that equals 1 if in the
  list from step 1, and 0 otherwise \vspace{0.1in}
  \item plot only those countries with `high==0', then add those with `high==1'
  separately in a different color
\end{enumerate}
\vspace{0.2in}

Here's the code for steps 1 and 2.
\footnotesize
<<>>=
h81 = subset(gdp, gdp$Year == 1981 & GDPcapImp > 8000)
highCountries = h81$Country
gdp$high = ifelse(gdp$Country %in% highCountries, 1, 0)
@

\end{frame}
%%%%%%%%%%%%%

\begin{frame}[fragile]
Notes regarding code on previous slide
\vspace{0.1in}

\begin{itemize}
  \item[line 1:] since we subset on `gdp', which is the entire dataset, we will
  get all variables for every observation that satisfies the 2 conditions in
  \textit{arg2} of the subset command.
  \begin{itemize}
    \item you can verify this by running `str' on gdp, then on h81
    \end{itemize}
    \vspace{0.1in}
    
  \item[line 2:] we are extracting the list of countries in the subset to the
  variable `highCountries'
    \begin{itemize}
    \item enter `highCountries' to see what's in that vector
    \end{itemize}
  
  \end{itemize}
\end{frame}
%%%%%%%%%%%%%

\begin{frame}[fragile]
\begin{itemize}
  \item[line 3:] we create a new variable (i.e. column) in `gdp' called high
  useing the return from calling `ifelse'
  
  \begin{itemize}
    \item `high' does not exist in `gdp'. For dataframes, if you refer to a
    column that doesn't exist, it is created\vspace{0.1in}
    \item `ifelse' takes 3 args: (1) a condition, (2) the value returned when
    the condition is true, (3) value returned when false\vspace{0.1in}
    \item `gdp\$Country' is the vector of country names for the entire `gdp'
    dataset. This condition checks each entry to see if it is in the vector
    `highCountries', returning true when it is and false
    otherwise.\vspace{0.1in}
    \item resultantly, for each observation that is a country in
    `highCountries', we get 1, and 0 otherwise.
    \end{itemize}
  \end{itemize}
\end{frame}
%%%%%%%%%%%%%

\begin{frame}[fragile]
Let's now plot the points. Observations with `high==1' will be colored red, and
marked with an `x' rather than the default circle.
\vspace{0.1in}

\footnotesize
<<spbro, eval=F>>= 
gdpLow = subset(gdp, gdp$high == 0)
gdpHigh = subset(gdp, gdp$high == 1)
plot(gdpLow$Year, gdpLow$GDPcapImp)
points(gdpHigh$Year, gdpHigh$GDPcapImp, pch='x', col='red')
@
\normalsize

\end{frame}
%%%%%%%%%%%%%

\begin{frame}[fragile]
\setkeys{Gin}{width=0.8\textwidth}
<<fig=T, echo=F>>= 
<<spbro>>
@

\end{frame}
%%%%%%%%%%%%%

\begin{frame}[fragile]
\setkeys{Gin}{width=0.8\textwidth}
<<fig=T, echo=F>>= 
<<spbro>>
par(new=T)
plot(c(0,10), c(0,10), type="n", axes=F, xlab='', ylab='')
draw.ellipse(9.3, 8.8, 2, 1, 70, deg=T, border='blue', lwd=3)
draw.ellipse(8, 3, 3, 2, border='blue', lwd=3)
text(6, 6, 'WTF?', col='blue', cex=2)
@

\end{frame}
%%%%%%%%%%%%%

\begin{frame}[fragile]
Some unexpected results. 
\vspace{0.2in}

\begin{itemize}
  \item there are some countries that were in the high cluster as of 1981, but
  then started stagnating. (red Xs separate from main pack post-1981).
  \item there's also countries that were in the low clusters prior to 1981, but
  then ended up in the high clusters in later years. (black circles in
  the high clusters).
\end{itemize}
\vspace{0.2in}

Set this aside for the moment -- we'll resume investigating with line graphs
next lecture.

\end{frame}
%%%%%%%%%%%%%

\subsection{Limitations}
\begin{frame}[fragile]
\frametitle{Limitations of scatterplots}
Clearly, scatterplots are nice, but they also have limitations. 
\vspace{0.2in}

They don't deal well with
\begin{itemize}
  \item discrete/categorical data.
  \item non-cardinal data (i.e. ordinal data, text)
\end{itemize}
\vspace{0.2in}

First, try 
\footnotesize
<<eval=F>>=
plot(roster$female, roster$year)
@

\end{frame}
%%%%%%%%%%%%%

\begin{frame}[fragile]

\begin{columns}[c] 
  \column{0.7\textwidth}
  
  \setkeys{Gin}{width=\textwidth}
<<fig=T, echo=F>>=
plot(roster$female, roster$year)
@
  
  \column{0.3\textwidth}
  
All the values are overlapping -- not very helpful is it?
\vspace{0.1in}

You could change the size of the circle at each nexus based on number of
circles there, but then it's not longer strictly a scatterplot.

\end{columns}

\end{frame}
%%%%%%%%%%%%%

\begin{frame}[fragile]
Next, try 
\footnotesize
<<eval=F>>=
plot(roster$female, roster$field)
@
\vspace{0.1in}
\normalsize

\begin{itemize}
  \item This gives an error\ldots 
  \item \ldots because `roster\$field' is full of text values\ldots how would
  you arrange a \textit{meaningful} axis for 'other', 'humanities', 'social sciences', and
'hard sciences'?
\end{itemize}
\end{frame}
%%%%%%%%%%%%%

\begin{frame}[fragile]
One could substitute values for each category, but this creates other problems:
\vspace{0.1in}
\begin{itemize}
  \item \textit{post grad. avg. salary}: nice, except this is no longer the same
  data
  \item \textit{arbitrary nums}: the axis no longer holds meaning. Might as well
  side-by-side barplot
\end{itemize}
\vspace{0.2in}

\textbf{Bottom line:} no single plot type is perfect for every situation.
You need to know many different types because each has strengths and weaknesses.
\end{frame}
%%%%%%%%%%%%%

\end{document}